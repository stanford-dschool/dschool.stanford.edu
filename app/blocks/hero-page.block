  <header data-swiftype-index=false data-header class="Header Header--page">
    <canvas class="Header-bg" data-hero-lines></canvas>

    <div class="Container u-cf">
      <div data-header-top data-reverse class="Header-top">
        <squarespace:navigation navigationId="siteNav" template="site-navigation" />
      </div>

      <div class="Grid">
        <div class="Grid-cell u-sm-size12 u-sm-offset2 u-noMarginTop">
          <div class="Header-carousel {.if collection.typeName}Header-{collection.typeName}{.end}">
            {.if item.customContent.gallery}
              {@|apply hero-carousel.block}
            {.or}
              {.equal? collection.typeName "field-notes"}
                <div class="Header-carouselImage" style="background-image: url({collection.mainImage.assetUrl}); background-position: calc({collection.mainImage.mediaFocalPoint.x} * 100%) calc({collection.mainImage.mediaFocalPoint.y} * 100%); background-repeat: no-repeat;"></div>
              {.or}
                {.equal? collection.typeName "classapply"}
                {.or}
                  {.equal? collection.typeName "classarchive"}
                  <div class="Header-carouselImage" style="background-image: url({collection.mainImage.assetUrl}); background-position: calc({collection.mainImage.mediaFocalPoint.x} * 100%) calc({collection.mainImage.mediaFocalPoint.y} * 100%); background-repeat: no-repeat;"></div>
                  {.or}
                    {.equal? collection.typeName "faqs"}
                    <div class="Header-carouselImage" style="background-image: url({collection.mainImage.assetUrl}); background-position: calc({collection.mainImage.mediaFocalPoint.x} * 100%) calc({collection.mainImage.mediaFocalPoint.y} * 100%); background-repeat: no-repeat;"></div>
                    {.or}
                      {.equal? collection.typeName "programs"}
                        <div class="Header-carouselImage" style="background-image: url({collection.mainImage.assetUrl}); background-position: calc({collection.mainImage.mediaFocalPoint.x} * 100%) calc({collection.mainImage.mediaFocalPoint.y} * 100%); background-repeat: no-repeat;"></div>
                      {.or}
                        <div class="Header-carouselImage" style="background-image: url({item.assetUrl}); background-position: calc({collection.mainImage.mediaFocalPoint.x} * 100%) calc({collection.mainImage.mediaFocalPoint.y} * 100%); background-repeat: no-repeat;"></div>
                      {.end}
                    {.end}
                  {.end}
                {.end}
              {.end}
            {.end}
            <div class="Header-carouselInfo">
              <p class="t-tag Header-carouselTag">
                {.equal? collection.typeName "field-notes"}
                  Field Notes
                {.or}
                  {.equal? collection.typeName "classes"}
                    {collection.typeName}{.equal? item.customContent.inactive true} - archived{.or}{.end}
                  {.or}
                    {.equal? collection.typeName "resources"}
                      <a href="{collection.fullUrl}">{collection.typeName}</a> /
                      {.if item.customContent.parentResource}
                        {.if item.customContent.parentResourceLink}
                          <a href="{item.customContent.parentResourceLink}">{item.customContent.parentResource}</a> /
                        {.or}
                          {item.customContent.parentResource} /
                        {.end}
                      {.end}
                    {.or}
                      {.equal? collection.typeName "program-collections"}
                        <a href="{collection.fullUrl}">{collection.title}</a> /
                      {.or}
                        {.equal? collection.typeName "programs"}
                          <a href="{collection.fullUrl}">{collection.typeName}</a> /
                        {.or}
                          {collection.title}
                        {.end}
                      {.end}
                    {.end}
                  {.end}
                {.end}
              </p>
              {.equal? collection.typeName "field-notes"}
                <h2 class="t-mainHeading Header-carouselTitle t-hyphen">{collection.title}</h2>
                <div class="Header-carouselDescription">{collection.description}</div>
              {.or}
                {.equal? collection.typeName "programs"}
                    <h2 class="t-mainHeading Header-carouselTitle">{collection.title}</h2>
                  {.or}
                    <h2 class="t-mainHeading Header-carouselTitle">{item.title}</h2>
                  {.end}
                {.end}
              {.end}
            </div>
          </div>
        </div>
      </div>
      <div class="Header-scrollIndicator">
        <a href="#post-hero" class="DirectionalArrow"></a>
      </div>
    </div>
  </header>
